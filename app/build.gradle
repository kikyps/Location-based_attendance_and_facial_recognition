plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

apply plugin: 'stringfog'
apply plugin: 'top.niunaijun.blackobfuscator'

// 导入RandomKeyGenerator类，如果不使用RandomKeyGenerator，可以删除此行
import com.github.megatronking.stringfog.plugin.kg.RandomKeyGenerator

android {
    compileSdk 33

    signingConfigs {
        debug {
            keyAlias 'mykey'
            keyPassword 'kipan12345'
            storeFile file('D:\\Android-Project\\AbsensiWajah\\Keystore\\mykey.jks')
            storePassword 'kipan12345'
        }
        release {
            keyAlias 'mykey'
            keyPassword 'kipan12345'
            storeFile file('D:\\Android-Project\\AbsensiWajah\\Keystore\\mykey.jks')
            storePassword 'kipan12345'
        }
    }

    defaultConfig {
        applicationId "com.absensi.inuraini"
        minSdk 21
        targetSdk 33
        versionCode 153071222
        versionName '1.5.3'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    aaptOptions {
        noCompress "tflite"
    }

    stringfog {
        // 必要：加解密库的实现类路径，需和上面配置的加解密算法库一致。
        implementation 'com.github.megatronking.stringfog.xor.StringFogImpl'
        // 可选：加密开关，默认开启。
        enable true
        // 可选：指定需加密的代码包路径，可配置多个，未指定将默认全部加密。
        fogPackages = ['com.absensi.inuraini']
        // 可选（3.0版本新增）：指定密钥生成器，默认使用长度8的随机密钥（每个字符串均有不同随机密钥,
        // 也可以指定一个固定的密钥：HardCodeKeyGenerator("This is a key")
        kg new RandomKeyGenerator()
        // 可选（4.0版本新增）：用于控制字符串加密后在字节码中的存在形式, 默认为base64，
        // 也可以使用text或者bytes
        mode bytes
    }

    // Configuration
    BlackObfuscator {
        // Enabled state
        enabled true
        // Obfuscation depth
        depth 3
        // The classes which need to be obfuscated
        obfClass = ["com.absensi.inuraini"]
        // It will not obfuscate the classes that in blackClass
//        blackClass = ["com.absensi.inuraini.common.CollectorActivity", "com.absensi.inuraini.user.absen.AbsenData"]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        // add the code from below line.
//        applicationVariants.all{
//                // this method is use to rename your release apk only
//            variant ->
//                variant.outputs.each{
//                        // on below line we are setting a name to our apk
//                    output->
//                        // on below line we are specifying our app name.
//                        project.ext { appName = 'Absensi-Wajah' }
//                        def versionName = variant.versionName
//                        // on below line we are adding the formatted date to our apk file name.
//                        def formattedDate = new Date().format('yyyy-MM-dd-HH-mm-ss')
//                        // on below line we are creating a new name for our apk.
//                        def newName = output.outputFile.name
//                        // on below line we are replacing our previous name with our app name.
//                        newName = newName.replace("app-", "$project.ext.appName-")
//                        // on below line we are replacing -release with our formatted date.
//                        newName = newName.replace("-release", "_v" + versionName)
//                        // at last we are setting our apk name to it.
//                        output.outputFileName  = newName
//                }
//        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildToolsVersion '33.0.0'
    buildFeatures {
        viewBinding true
    }
    sourceSets {
        main {
            res {
                srcDirs 'src\\main\\res'
            }
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.gms:play-services-base:18.1.0'
    implementation platform('com.google.firebase:firebase-bom:31.1.0')
    implementation 'com.google.firebase:firebase-auth:21.1.0'
    implementation 'com.google.android.gms:play-services-auth:20.4.0'
    implementation 'com.google.firebase:firebase-database:20.1.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'
    implementation 'androidx.navigation:navigation-fragment:2.5.3'
    implementation 'androidx.navigation:navigation-ui:2.5.3'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.google.android.libraries.places:places:2.7.0'
    implementation 'com.google.firebase:firebase-crashlytics-buildtools:2.9.2'
    implementation 'com.google.firebase:firebase-config:21.2.0'
    implementation 'com.google.firebase:firebase-storage:20.1.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    implementation 'com.hbb20:ccp:2.6.1'
    implementation 'io.github.chaosleung:pinview:1.4.4'
//    implementation 'com.google.firebase:firebase-admin:9.0.0'
    implementation 'cat.ereza:customactivityoncrash:2.4.0'
    annotationProcessor 'androidx.room:room-compiler:2.4.3'
    implementation 'com.google.mlkit:face-detection:16.1.5'
    implementation 'com.google.code.gson:gson:2.10'
//    implementation 'androidx.core:core-splashscreen:1.0.0'
    implementation 'com.google.firebase:firebase-crashlytics:18.3.2'
    implementation 'com.google.firebase:firebase-analytics:21.2.0'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'com.airbnb.android:lottie:5.2.0'
    implementation 'com.scottyab:rootbeer-lib:0.1.0'
    implementation 'com.github.clans:fab:1.6.4'
    implementation 'com.github.mancj:MaterialSearchBar:0.8.5'
    implementation 'com.h6ah4i.android.materialshadowninepatch:materialshadowninepatch:1.0.0'
    implementation 'com.github.megatronking.stringfog:xor:4.0.1'
//    implementation 'com.github.tejpratap46:PDFCreatorAndroid:3.0.2'
//    implementation 'com.github.getActivity:XXPermissions:16.2'
//    implementation 'com.github.billthefarmer:CustomCalendarView:v1.05'
//    implementation 'com.github.MOLO17:CustomizableCalendar:v0.1.4'
//    implementation 'com.applandeo:material-calendar-view:1.9.0-rc03'

    // CameraX core library using the camera2 implementation
    def camerax_version = '1.3.0-alpha01'
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    implementation "androidx.camera:camera-video:${camerax_version}"
    implementation "androidx.camera:camera-view:${camerax_version}"
    implementation "androidx.camera:camera-extensions:${camerax_version}"

    implementation('org.tensorflow:tensorflow-lite:2.11.0') { changing = true }
}